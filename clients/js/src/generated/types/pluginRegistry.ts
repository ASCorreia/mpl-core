/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Serializer,
  array,
  struct,
  tuple,
} from '@metaplex-foundation/umi/serializers';
import {
  Authority,
  AuthorityArgs,
  Key,
  KeyArgs,
  RegistryData,
  RegistryDataArgs,
  getAuthoritySerializer,
  getKeySerializer,
  getRegistryDataSerializer,
} from '.';

export type PluginRegistry = {
  key: Key;
  registry: Array<[Key, RegistryData]>;
  externalPlugins: Array<[Authority, RegistryData]>;
};

export type PluginRegistryArgs = {
  key: KeyArgs;
  registry: Array<[KeyArgs, RegistryDataArgs]>;
  externalPlugins: Array<[AuthorityArgs, RegistryDataArgs]>;
};

export function getPluginRegistrySerializer(): Serializer<
  PluginRegistryArgs,
  PluginRegistry
> {
  return struct<PluginRegistry>(
    [
      ['key', getKeySerializer()],
      [
        'registry',
        array(tuple([getKeySerializer(), getRegistryDataSerializer()])),
      ],
      [
        'externalPlugins',
        array(tuple([getAuthoritySerializer(), getRegistryDataSerializer()])),
      ],
    ],
    { description: 'PluginRegistry' }
  ) as Serializer<PluginRegistryArgs, PluginRegistry>;
}
